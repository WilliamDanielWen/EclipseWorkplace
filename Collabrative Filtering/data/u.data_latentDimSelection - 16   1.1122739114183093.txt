Latent dimension = 1,	RMSE = 2.3269219189281514,	 MAE = 2.0677341858382228
Latent dimension = 2,	RMSE = 1.4743371437827149,	 MAE = 1.2581606497078202
Latent dimension = 3,	RMSE = 1.1122739114183093,	 MAE = 0.9191542460153821 optimal
Latent dimension = 4,	RMSE = 1.3506434208799933,	 MAE = 1.0532284898295252
Latent dimension = 5,	RMSE = 1.8764453118817535,	 MAE = 1.5198965671331055
Latent dimension = 6,	RMSE = 2.4687597067635245,	 MAE = 2.0747721023395753
Latent dimension = 7,	RMSE = 3.0603841294996865,	 MAE = 2.587555099254121
Latent dimension = 8,	RMSE = 3.642872584941042,	 MAE = 3.0596255983650757
Latent dimension = 9,	RMSE = 4.2131677091029385,	 MAE = 3.496242132154051
Latent dimension = 10,	RMSE = 4.772157977247041,	 MAE = 3.9001665022880525
Latent dimension = 11,	RMSE = 5.323115939931648,	 MAE = 4.275704813042336
Latent dimension = 12,	RMSE = 5.868116825797857,	 MAE = 4.628542356510563
Latent dimension = 13,	RMSE = 6.399687342591727,	 MAE = 4.954871318658699
Latent dimension = 14,	RMSE = 6.932298873288549,	 MAE = 5.2620866349446
Latent dimension = 15,	RMSE = 7.466055959845903,	 MAE = 5.555268260362473
Latent dimension = 16,	RMSE = 8.004247970838973,	 MAE = 5.832650935920653
Latent dimension = 17,	RMSE = 8.535820610952097,	 MAE = 6.0926295794573075
Latent dimension = 18,	RMSE = 9.079947121383395,	 MAE = 6.346107406755453
Latent dimension = 19,	RMSE = 9.63193264113254,	 MAE = 6.585166882319453
Latent dimension = 20,	RMSE = 10.18673415488366,	 MAE = 6.81183005662462
Latent dimension = 21,	RMSE = 10.761030432754097,	 MAE = 7.038707783835157
Latent dimension = 22,	RMSE = 11.31961485909656,	 MAE = 7.243365108017275
Latent dimension = 23,	RMSE = 11.916296347590356,	 MAE = 7.453491685741009
Latent dimension = 24,	RMSE = 12.487363358811397,	 MAE = 7.640637641206874
Latent dimension = 25,	RMSE = 13.091876966804818,	 MAE = 7.834996316473759
Latent dimension = 26,	RMSE = 13.698229383850025,	 MAE = 8.015058253312306
Latent dimension = 27,	RMSE = 14.307926426983858,	 MAE = 8.225426870280156
Latent dimension = 28,	RMSE = 14.939617335774008,	 MAE = 8.522452178041101
Latent dimension = 29,	RMSE = 15.550584858545722,	 MAE = 8.917518889042814
Latent dimension = 30,	RMSE = 16.157038419014285,	 MAE = 9.406716366708922
Latent dimension = 31,	RMSE = 16.78139728589741,	 MAE = 9.954829825369757
Latent dimension = 32,	RMSE = 17.39361737827925,	 MAE = 10.520090613964042
Latent dimension = 33,	RMSE = 18.0202245442186,	 MAE = 11.112627398540763
Latent dimension = 34,	RMSE = 18.630035245669795,	 MAE = 11.721740005081346
Latent dimension = 35,	RMSE = 19.19062877591842,	 MAE = 12.30441161416184
Latent dimension = 36,	RMSE = 19.802413570529147,	 MAE = 12.935887736701016
Latent dimension = 37,	RMSE = 20.38118476799886,	 MAE = 13.587004721212164
Latent dimension = 38,	RMSE = 20.944538693049704,	 MAE = 14.206476952651139
Latent dimension = 39,	RMSE = 21.502291397864354,	 MAE = 14.857780831080532
Latent dimension = 40,	RMSE = 22.06539398067346,	 MAE = 15.550392957841945
Latent dimension = 41,	RMSE = 22.621455016060242,	 MAE = 16.247215351411807
Latent dimension = 42,	RMSE = 23.18302179281165,	 MAE = 16.992252903262276
Latent dimension = 43,	RMSE = 23.71648769432191,	 MAE = 17.694454346228518
Latent dimension = 44,	RMSE = 24.329239037976187,	 MAE = 18.49267360280391
Latent dimension = 45,	RMSE = 24.890010064030232,	 MAE = 19.246543207923615
Latent dimension = 46,	RMSE = 25.443402454688467,	 MAE = 19.94927776151397
Latent dimension = 47,	RMSE = 26.100644971664575,	 MAE = 20.69296735462185
Latent dimension = 48,	RMSE = 26.708962484565085,	 MAE = 21.315364409347787
Latent dimension = 49,	RMSE = 27.728073964039417,	 MAE = 22.28726902134395
Latent dimension = 50,	RMSE = 29.195365277383974,	 MAE = 23.555522352682303
		//initilization
		lambda=0.0001;
		eta=0.031;

		predictionLowerBound=1;
		predictionUpperBound=5;

		convergeSampleProportion=1;// select all the training example to calculate the cost function
		convergeThreshold=0.0000001;
		convergeCheckWindowSize=trainSet.size()*0.3;  // for every "convergeCheckWindowSize" number updates, check if converge


		//double middleValue=((predictionUpperBound-predictionLowerBound)/2)/latentDimension;
		double lower_bound_init=1;
		double upper_bound_init=1.15;
