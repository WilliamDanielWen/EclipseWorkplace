Latent dimension = 1,	RMSE = 3.466159062857552,	 MAE = 3.2712282801875383
Latent dimension = 2,	RMSE = 3.2197932481128815,	 MAE = 3.003734864136377
Latent dimension = 3,	RMSE = 3.0087732063213917,	 MAE = 2.7743587177688185
Latent dimension = 4,	RMSE = 2.794163777292714,	 MAE = 2.5437842782421667
Latent dimension = 5,	RMSE = 2.5616219015282615,	 MAE = 2.2977404300183055
Latent dimension = 6,	RMSE = 2.355970334931926,	 MAE = 2.081627838598403
Latent dimension = 7,	RMSE = 2.159963534718076,	 MAE = 1.88526604261321
Latent dimension = 8,	RMSE = 1.9898519899926508,	 MAE = 1.7090066740665157
Latent dimension = 9,	RMSE = 1.7989311773008094,	 MAE = 1.5264480320447107
Latent dimension = 10,	RMSE = 1.664893637389745,	 MAE = 1.398634179141864
Latent dimension = 11,	RMSE = 1.5288326479790384,	 MAE = 1.2677643384086985
Latent dimension = 12,	RMSE = 1.435914587444942,	 MAE = 1.182869172040603
Latent dimension = 13,	RMSE = 1.3978880421475801,	 MAE = 1.1419937828615063
Latent dimension = 14,	RMSE = 1.3846930795760355,	 MAE = 1.115110886492691  optimal
Latent dimension = 15,	RMSE = 1.417746853035308,	 MAE = 1.1318597078559658
Latent dimension = 16,	RMSE = 1.4954259830984342,	 MAE = 1.178671115733692
Latent dimension = 17,	RMSE = 1.6153546191454624,	 MAE = 1.273799448529991
Latent dimension = 18,	RMSE = 1.7245210421307502,	 MAE = 1.356168897572414
Latent dimension = 19,	RMSE = 1.8965849240289487,	 MAE = 1.5042186729738987
Latent dimension = 20,	RMSE = 2.045672722280754,	 MAE = 1.6446151208855653
Latent dimension = 21,	RMSE = 2.2601652132760095,	 MAE = 1.8483436010391983
Latent dimension = 22,	RMSE = 2.451338115813176,	 MAE = 2.0410996949351037
Latent dimension = 23,	RMSE = 2.644098931560765,	 MAE = 2.2312587569394737
Latent dimension = 24,	RMSE = 2.824998074981374,	 MAE = 2.4213846083042014
Latent dimension = 25,	RMSE = 3.059724920746116,	 MAE = 2.666610808440931
Latent dimension = 26,	RMSE = 3.296120615410544,	 MAE = 2.9107454327438833
Latent dimension = 27,	RMSE = 3.4713353716330007,	 MAE = 3.10828166204866
Latent dimension = 28,	RMSE = 3.7071109451946342,	 MAE = 3.357506100922407
Latent dimension = 29,	RMSE = 3.9562677012892116,	 MAE = 3.6132303558270444
Latent dimension = 30,	RMSE = 4.148604270604127,	 MAE = 3.8160450689684637
Latent dimension = 31,	RMSE = 4.377914718766913,	 MAE = 4.054649377671977
Latent dimension = 32,	RMSE = 4.603757065680587,	 MAE = 4.2873597394381155
Latent dimension = 33,	RMSE = 4.806430090094904,	 MAE = 4.5027055119156385
Latent dimension = 34,	RMSE = 5.029648972494948,	 MAE = 4.740320914937547
Latent dimension = 35,	RMSE = 5.297685321956915,	 MAE = 5.008675130747515
Latent dimension = 36,	RMSE = 5.549192739318094,	 MAE = 5.2686912702632345
Latent dimension = 37,	RMSE = 5.738495036655946,	 MAE = 5.461926446527538
Latent dimension = 38,	RMSE = 5.9755503026459165,	 MAE = 5.7009710799476085
Latent dimension = 39,	RMSE = 6.1524751015464805,	 MAE = 5.889378967990604
Latent dimension = 40,	RMSE = 6.409062244493702,	 MAE = 6.154044749356781
Latent dimension = 41,	RMSE = 6.612505515149186,	 MAE = 6.355418130120792
Latent dimension = 42,	RMSE = 6.848407819704081,	 MAE = 6.589714326736124
Latent dimension = 43,	RMSE = 7.07162156778727,	 MAE = 6.823884964184744
Latent dimension = 44,	RMSE = 7.297221965385297,	 MAE = 7.050524551028761
Latent dimension = 45,	RMSE = 7.551530349219432,	 MAE = 7.3083734570351115
Latent dimension = 46,	RMSE = 7.767993510487393,	 MAE = 7.5275040671973725
Latent dimension = 47,	RMSE = 8.001145491595807,	 MAE = 7.762115169960786
Latent dimension = 48,	RMSE = 8.18364966532614,	 MAE = 7.939650078728775
Latent dimension = 49,	RMSE = 8.40724758334146,	 MAE = 8.166868193354684
Latent dimension = 50,	RMSE = 8.632289765676877,	 MAE = 8.397929506434116

		//initilization
		lambda=0.002;
		eta=0.001;

		predictionLowerBound=1;
		predictionUpperBound=5;

		convergeSampleProportion=1;// select all the training example to calculate the cost function
		convergeThreshold=0.0000001;
		convergeCheckWindowSize=trainSet.size()*0.3;  // when update convergeCheckWindowSize, check if converge


		//double middleValue=((predictionUpperBound-predictionLowerBound)/2)/latentDimension;
		double lower_bound_init=0;
		double upper_bound_init=1;