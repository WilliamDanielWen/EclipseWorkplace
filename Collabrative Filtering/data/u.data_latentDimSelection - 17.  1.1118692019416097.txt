Latent dimension = 1,	RMSE = 2.320344638961288,	 MAE = 2.0602079589424096
Latent dimension = 2,	RMSE = 1.4675159621983676,	 MAE = 1.252307287385373
Latent dimension = 3,	RMSE = 1.1118692019416097,	 MAE = 0.9187203204747411
Latent dimension = 4,	RMSE = 1.346876721230524,	 MAE = 1.0504237311715474
Latent dimension = 5,	RMSE = 1.8670772230970758,	 MAE = 1.509906140613127
Latent dimension = 6,	RMSE = 2.452291025742478,	 MAE = 2.0552370757999467
Latent dimension = 7,	RMSE = 3.0355929191379625,	 MAE = 2.5598651076661287
Latent dimension = 8,	RMSE = 3.6207802773427518,	 MAE = 3.0301197322630395
Latent dimension = 9,	RMSE = 4.191037763042365,	 MAE = 3.462026605608002
Latent dimension = 10,	RMSE = 4.747784399458721,	 MAE = 3.858139687868796
Latent dimension = 11,	RMSE = 5.2927543187182255,	 MAE = 4.228793058322774
Latent dimension = 12,	RMSE = 5.825613279019177,	 MAE = 4.568076741357375
Latent dimension = 13,	RMSE = 6.364793995753682,	 MAE = 4.8920348778594756
Latent dimension = 14,	RMSE = 6.896452885644303,	 MAE = 5.196139758361376
Latent dimension = 15,	RMSE = 7.428405167131134,	 MAE = 5.482137411412781
Latent dimension = 16,	RMSE = 7.966794907270147,	 MAE = 5.7531515494105205
Latent dimension = 17,	RMSE = 8.505569207353549,	 MAE = 6.0097583132646175
Latent dimension = 18,	RMSE = 9.048911122567835,	 MAE = 6.252233364777433
Latent dimension = 19,	RMSE = 9.59996583815215,	 MAE = 6.487958031772342
Latent dimension = 20,	RMSE = 10.17162025707455,	 MAE = 6.720294490479643
Latent dimension = 21,	RMSE = 10.745415238681684,	 MAE = 6.937140236941315
Latent dimension = 22,	RMSE = 11.32130834254385,	 MAE = 7.1447024846300495
Latent dimension = 23,	RMSE = 11.907285796988214,	 MAE = 7.3399392590162265
Latent dimension = 24,	RMSE = 12.501660607725023,	 MAE = 7.533989193521803
Latent dimension = 25,	RMSE = 13.103608733693909,	 MAE = 7.717914530030626
Latent dimension = 26,	RMSE = 13.726621581718982,	 MAE = 7.933270231019958
Latent dimension = 27,	RMSE = 14.33176990341968,	 MAE = 8.205194566938829
Latent dimension = 28,	RMSE = 14.945905549917475,	 MAE = 8.584718777846742
Latent dimension = 29,	RMSE = 15.579112621079753,	 MAE = 9.083117842503473
Latent dimension = 30,	RMSE = 16.18450898103973,	 MAE = 9.621722285529184
Latent dimension = 31,	RMSE = 16.803096781180855,	 MAE = 10.18091700182065
Latent dimension = 32,	RMSE = 17.421566194261015,	 MAE = 10.772558443115074
Latent dimension = 33,	RMSE = 18.01117685285545,	 MAE = 11.35826950392531
Latent dimension = 34,	RMSE = 18.62249276568665,	 MAE = 11.982590456596814
Latent dimension = 35,	RMSE = 19.212876700083143,	 MAE = 12.602470117571508
Latent dimension = 36,	RMSE = 19.79335324810362,	 MAE = 13.24020215990107
Latent dimension = 37,	RMSE = 20.336087557385,	 MAE = 13.861003370480876
Latent dimension = 38,	RMSE = 20.91143789939475,	 MAE = 14.529887276358329
Latent dimension = 39,	RMSE = 21.4757192256486,	 MAE = 15.220617735227467
Latent dimension = 40,	RMSE = 22.03827610597777,	 MAE = 15.926525848203795
Latent dimension = 41,	RMSE = 22.586835632593683,	 MAE = 16.65523036913499
Latent dimension = 42,	RMSE = 23.157258225369894,	 MAE = 17.399355080620314
Latent dimension = 43,	RMSE = 23.705511606208294,	 MAE = 18.152660847401997
Latent dimension = 44,	RMSE = 24.290881046167236,	 MAE = 18.90644953422092
Latent dimension = 45,	RMSE = 24.908644624314235,	 MAE = 19.661532632780812
Latent dimension = 46,	RMSE = 25.496681466804212,	 MAE = 20.299730040847965
Latent dimension = 47,	RMSE = 26.2640136941595,	 MAE = 21.07203784776903
Latent dimension = 48,	RMSE = 27.572550190522556,	 MAE = 22.19845384898417
Latent dimension = 49,	RMSE = 28.892345711787993,	 MAE = 23.389965249969663
Latent dimension = 50,	RMSE = 30.36454581455799,	 MAE = 24.841336476161676

		//initilization
		lambda=0.0001;
		eta=0.032;

		predictionLowerBound=1;
		predictionUpperBound=5;

		convergeSampleProportion=1;// select all the training example to calculate the cost function
		convergeThreshold=0.0000001;
		convergeCheckWindowSize=trainSet.size()*0.3;  // for every "convergeCheckWindowSize" number updates, check if converge


		//double middleValue=((predictionUpperBound-predictionLowerBound)/2)/latentDimension;
		double lower_bound_init=1;
		double upper_bound_init=1.15;
