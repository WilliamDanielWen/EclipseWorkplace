Latent dimension = 1,	RMSE = 2.3365887778452694,	 MAE = 2.0780976644268105
Latent dimension = 2,	RMSE = 1.476679762588751,	 MAE = 1.2612166953801653
Latent dimension = 3,	RMSE = 1.1124764886893062,	 MAE = 0.9192991074577564 optimal

Latent dimension = 4,	RMSE = 1.3518212161458611,	 MAE = 1.0547923972030486
Latent dimension = 5,	RMSE = 1.882175289370635,	 MAE = 1.5260589739262558
Latent dimension = 6,	RMSE = 2.4791691728032594,	 MAE = 2.0888985346005464
Latent dimension = 7,	RMSE = 3.07847152118432,	 MAE = 2.6119770846423394
Latent dimension = 8,	RMSE = 3.668626611354493,	 MAE = 3.0942187161662984
Latent dimension = 9,	RMSE = 4.2424243335470155,	 MAE = 3.5351589085015034
Latent dimension = 10,	RMSE = 4.810299158554587,	 MAE = 3.948905098173475
Latent dimension = 11,	RMSE = 5.357711464925228,	 MAE = 4.3275849230031564
Latent dimension = 12,	RMSE = 5.8990974978822095,	 MAE = 4.6839171429620095
Latent dimension = 13,	RMSE = 6.440030981802357,	 MAE = 5.018600765255864
Latent dimension = 14,	RMSE = 6.975091717432936,	 MAE = 5.3358561092049115
Latent dimension = 15,	RMSE = 7.505077856759205,	 MAE = 5.630880164550565
Latent dimension = 16,	RMSE = 8.044525092077722,	 MAE = 5.91724034499852
Latent dimension = 17,	RMSE = 8.57558430560793,	 MAE = 6.180673094881892
Latent dimension = 18,	RMSE = 9.118018615771328,	 MAE = 6.438982921784417
Latent dimension = 19,	RMSE = 9.662403920135139,	 MAE = 6.681860255203223
Latent dimension = 20,	RMSE = 10.212569273800032,	 MAE = 6.916498439955994
Latent dimension = 21,	RMSE = 10.778345418416269,	 MAE = 7.140847023707641
Latent dimension = 22,	RMSE = 11.341548084957457,	 MAE = 7.355724772749527
Latent dimension = 23,	RMSE = 11.921451119375984,	 MAE = 7.564324129037149
Latent dimension = 24,	RMSE = 12.512953111612198,	 MAE = 7.770332844930091
Latent dimension = 25,	RMSE = 13.092891955808488,	 MAE = 7.958195463252837
Latent dimension = 26,	RMSE = 13.696766101907198,	 MAE = 8.140523028303733
Latent dimension = 27,	RMSE = 14.30255417125154,	 MAE = 8.323514859388403
Latent dimension = 28,	RMSE = 14.904569047466419,	 MAE = 8.533541127640692
Latent dimension = 29,	RMSE = 15.528895850846396,	 MAE = 8.833838072385976
Latent dimension = 30,	RMSE = 16.150837635993522,	 MAE = 9.241376674181282
Latent dimension = 31,	RMSE = 16.766782442571394,	 MAE = 9.73308560983777
Latent dimension = 32,	RMSE = 17.37746382176794,	 MAE = 10.27642842605887
Latent dimension = 33,	RMSE = 17.978670572533275,	 MAE = 10.834439143615562
Latent dimension = 34,	RMSE = 18.600616311822044,	 MAE = 11.42537441266659
Latent dimension = 35,	RMSE = 19.196689403648527,	 MAE = 12.017542352267924
Latent dimension = 36,	RMSE = 19.799290732415994,	 MAE = 12.629593648608694
Latent dimension = 37,	RMSE = 20.39515081890001,	 MAE = 13.256941190964872
Latent dimension = 38,	RMSE = 20.968318726030827,	 MAE = 13.880610858178432
Latent dimension = 39,	RMSE = 21.533675001787486,	 MAE = 14.514188069056948
Latent dimension = 40,	RMSE = 22.094301071123727,	 MAE = 15.172829884388724
Latent dimension = 41,	RMSE = 22.650084759366003,	 MAE = 15.832445254784535
Latent dimension = 42,	RMSE = 23.20986866629648,	 MAE = 16.53622214371876
Latent dimension = 43,	RMSE = 23.77584324871123,	 MAE = 17.267144334353674
Latent dimension = 44,	RMSE = 24.30544181817125,	 MAE = 17.98449334023412
Latent dimension = 45,	RMSE = 24.90172478496057,	 MAE = 18.769003678909137
Latent dimension = 46,	RMSE = 25.46027775809908,	 MAE = 19.507267326242083
Latent dimension = 47,	RMSE = 26.0578462488758,	 MAE = 20.261203073858017
Latent dimension = 48,	RMSE = 26.615711844560757,	 MAE = 20.988088252345165
Latent dimension = 49,	RMSE = 27.26814526534874,	 MAE = 21.66131032199616
Latent dimension = 50,	RMSE = 28.039131717777536,	 MAE = 22.489798182776703

		//initilization
		lambda=0.0001;
		eta=0.03;

		predictionLowerBound=1;
		predictionUpperBound=5;

		convergeSampleProportion=1;// select all the training example to calculate the cost function
		convergeThreshold=0.0000001;
		convergeCheckWindowSize=trainSet.size()*0.3;  // for every "convergeCheckWindowSize" number updates, check if converge


		//double middleValue=((predictionUpperBound-predictionLowerBound)/2)/latentDimension;
		double lower_bound_init=1;
		double upper_bound_init=1.15;