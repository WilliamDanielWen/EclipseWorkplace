Latent dimension = 1,	RMSE = 3.456656438330042,	 MAE = 3.2616123781316495
Latent dimension = 2,	RMSE = 3.229042495593646,	 MAE = 3.013962735713251
Latent dimension = 3,	RMSE = 2.997274439029311,	 MAE = 2.762386342302252
Latent dimension = 4,	RMSE = 2.7870283632342203,	 MAE = 2.5342477323131076
Latent dimension = 5,	RMSE = 2.561466063323666,	 MAE = 2.296702838108742
Latent dimension = 6,	RMSE = 2.346994512642502,	 MAE = 2.0738190068190026
Latent dimension = 7,	RMSE = 2.159852188178558,	 MAE = 1.8795875708055891
Latent dimension = 8,	RMSE = 1.953505635734301,	 MAE = 1.6770245153701382
Latent dimension = 9,	RMSE = 1.8045476516696943,	 MAE = 1.5282500704587254
Latent dimension = 10,	RMSE = 1.6508218034297097,	 MAE = 1.382500314062399
Latent dimension = 11,	RMSE = 1.5450948396501292,	 MAE = 1.282069217673652
Latent dimension = 12,	RMSE = 1.446852226862904,	 MAE = 1.1924826043133423
Latent dimension = 13,	RMSE = 1.3881522580714842,	 MAE = 1.1308036898136904
Latent dimension = 14,	RMSE = 1.3810383660014693,	 MAE = 1.1135912864715443  optimal

Latent dimension = 15,	RMSE = 1.4209114946808148,	 MAE = 1.132582215281134
Latent dimension = 16,	RMSE = 1.4830742823950478,	 MAE = 1.175665545093923
Latent dimension = 17,	RMSE = 1.599987360094001,	 MAE = 1.2589258967526595
Latent dimension = 18,	RMSE = 1.7379523463485647,	 MAE = 1.3687122734419543
Latent dimension = 19,	RMSE = 1.8832751289158634,	 MAE = 1.4949453240929504
Latent dimension = 20,	RMSE = 2.064281561437897,	 MAE = 1.6595007997013353
Latent dimension = 21,	RMSE = 2.247092761011122,	 MAE = 1.8370284269322243
Latent dimension = 22,	RMSE = 2.4520939830353106,	 MAE = 2.032255119136754
Latent dimension = 23,	RMSE = 2.6420716188726905,	 MAE = 2.23250749155823
Latent dimension = 24,	RMSE = 2.832174356775133,	 MAE = 2.42864015959952
Latent dimension = 25,	RMSE = 3.0348919149290317,	 MAE = 2.6371976354401396
Latent dimension = 26,	RMSE = 3.257222768156538,	 MAE = 2.874453515238151
Latent dimension = 27,	RMSE = 3.511579394204996,	 MAE = 3.1457291067260646
Latent dimension = 28,	RMSE = 3.6874969007268747,	 MAE = 3.329492913547136
Latent dimension = 29,	RMSE = 3.9025378972567166,	 MAE = 3.5500099009681962
Latent dimension = 30,	RMSE = 4.093367177803322,	 MAE = 3.750117218094604
Latent dimension = 31,	RMSE = 4.319505008137017,	 MAE = 3.992050425197496
Latent dimension = 32,	RMSE = 4.626758836272084,	 MAE = 4.307440619688542
Latent dimension = 33,	RMSE = 4.8224023716040385,	 MAE = 4.514156245901072
Latent dimension = 34,	RMSE = 5.062703644923201,	 MAE = 4.7615887018943654
Latent dimension = 35,	RMSE = 5.275867076115827,	 MAE = 4.980626876371578
Latent dimension = 36,	RMSE = 5.418356500096633,	 MAE = 5.1299505437081105
Latent dimension = 37,	RMSE = 5.705432203062481,	 MAE = 5.425404497023019
Latent dimension = 38,	RMSE = 5.9286364454487295,	 MAE = 5.646511150586225
Latent dimension = 39,	RMSE = 6.158610352825124,	 MAE = 5.872158783790647
Latent dimension = 40,	RMSE = 6.363943847727699,	 MAE = 6.091337353670812
Latent dimension = 41,	RMSE = 6.563780627076786,	 MAE = 6.294240568572855
Latent dimension = 42,	RMSE = 6.813118954449808,	 MAE = 6.551171830959305
Latent dimension = 43,	RMSE = 7.047469209908134,	 MAE = 6.787641286330296
Latent dimension = 44,	RMSE = 7.208302111351531,	 MAE = 6.94528293296379
Latent dimension = 45,	RMSE = 7.5410808087159635,	 MAE = 7.281241221874188
Latent dimension = 46,	RMSE = 7.6912043705620095,	 MAE = 7.427993762570378
Latent dimension = 47,	RMSE = 7.963496028223533,	 MAE = 7.71133429229256
Latent dimension = 48,	RMSE = 8.165709059237516,	 MAE = 7.912987061116934
Latent dimension = 49,	RMSE = 8.375231170685371,	 MAE = 8.124267132285201
Latent dimension = 50,	RMSE = 8.574165103641782,	 MAE = 8.32067055137842

		lambda=0.002;
		eta=0.001;

		predictionLowerBound=1;
		predictionUpperBound=5;

		convergeSampleProportion=1;// select all the training example to calculate the cost function
		convergeThreshold=0.0000001;
		convergeCheckWindowSize=trainSet.size()*0.3;  // when update convergeCheckWindowSize, check if converge


		//double middleValue=((predictionUpperBound-predictionLowerBound)/2)/latentDimension;
		double lower_bound_init=0;
		double upper_bound_init=1;
