Latent dimension = 1,	RMSE = 3.342135703985689,	 MAE = 3.1327587016778784
Latent dimension = 2,	RMSE = 3.038020643392751,	 MAE = 2.795238916874667
Latent dimension = 3,	RMSE = 2.7777602538664707,	 MAE = 2.51262666884393
Latent dimension = 4,	RMSE = 2.54435115209282,	 MAE = 2.2649173758739116
Latent dimension = 5,	RMSE = 2.3177081552897087,	 MAE = 2.0291797353109993
Latent dimension = 6,	RMSE = 2.1289488824183675,	 MAE = 1.8398028362948131
Latent dimension = 7,	RMSE = 1.9362757538584863,	 MAE = 1.6518275133127396
Latent dimension = 8,	RMSE = 1.7854254887836816,	 MAE = 1.5061777393728757
Latent dimension = 9,	RMSE = 1.6554255117259253,	 MAE = 1.384783424339962
Latent dimension = 10,	RMSE = 1.528223493938146,	 MAE = 1.2677743706608937
Latent dimension = 11,	RMSE = 1.4386706458486487,	 MAE = 1.1858260377244145
Latent dimension = 12,	RMSE = 1.3760208341160818,	 MAE = 1.1277783330945368
Latent dimension = 13,	RMSE = 1.3381732996426396,	 MAE = 1.0883583104877457
Latent dimension = 14,	RMSE = 1.3301806201503434,	 MAE = 1.070014992917351
Latent dimension = 15,	RMSE = 1.3432493200408182,	 MAE = 1.0729844790400807
Latent dimension = 16,	RMSE = 1.381734468184906,	 MAE = 1.0966030340536617
Latent dimension = 17,	RMSE = 1.4469872224465503,	 MAE = 1.137923420932092
Latent dimension = 18,	RMSE = 1.5168096123676083,	 MAE = 1.1866508386398302
Latent dimension = 19,	RMSE = 1.5967087241528206,	 MAE = 1.2517955867209607
Latent dimension = 20,	RMSE = 1.7039329855980667,	 MAE = 1.3358957314546678
Latent dimension = 21,	RMSE = 1.8080746682812046,	 MAE = 1.4237667229924142
Latent dimension = 22,	RMSE = 1.9326951254521405,	 MAE = 1.5258132309570196
Latent dimension = 23,	RMSE = 2.050323307987571,	 MAE = 1.624533049877206
Latent dimension = 24,	RMSE = 2.1675440899632497,	 MAE = 1.7352601196072495
Latent dimension = 25,	RMSE = 2.294280417808207,	 MAE = 1.8458826134815953
Latent dimension = 26,	RMSE = 2.4382840255126155,	 MAE = 1.9714096099541583
Latent dimension = 27,	RMSE = 2.5329128736960547,	 MAE = 2.0596244827359156
Latent dimension = 28,	RMSE = 2.658931031356249,	 MAE = 2.1744458080619697
Latent dimension = 29,	RMSE = 2.764438481203473,	 MAE = 2.2643577146580407
Latent dimension = 30,	RMSE = 2.941866177397576,	 MAE = 2.416066204174354
Latent dimension = 31,	RMSE = 3.028319373650423,	 MAE = 2.4944932224803598
Latent dimension = 32,	RMSE = 3.1807972518600565,	 MAE = 2.6169427770076696
Latent dimension = 33,	RMSE = 3.2976497811760765,	 MAE = 2.7233328250771285
Latent dimension = 34,	RMSE = 3.4214068335680947,	 MAE = 2.8224453740732973
Latent dimension = 35,	RMSE = 3.5572455877637155,	 MAE = 2.9346266554820746
Latent dimension = 36,	RMSE = 3.6436011171068627,	 MAE = 3.01333761875583
Latent dimension = 37,	RMSE = 3.800803764228246,	 MAE = 3.1336343026972946
Latent dimension = 38,	RMSE = 3.9312241275387594,	 MAE = 3.2319642434158182
Latent dimension = 39,	RMSE = 4.065500893049981,	 MAE = 3.345369143659917
Latent dimension = 40,	RMSE = 4.193681291430008,	 MAE = 3.433143717337355
Latent dimension = 41,	RMSE = 4.295456340615406,	 MAE = 3.5176770060291473
Latent dimension = 42,	RMSE = 4.4223649430594385,	 MAE = 3.6164618369077766
Latent dimension = 43,	RMSE = 4.524710589475502,	 MAE = 3.6951347321460934
Latent dimension = 44,	RMSE = 4.652210184016004,	 MAE = 3.7920327716028117
Latent dimension = 45,	RMSE = 4.761467045966718,	 MAE = 3.871130739574344
Latent dimension = 46,	RMSE = 4.875719848865732,	 MAE = 3.9569000790766404
Latent dimension = 47,	RMSE = 5.028253383118032,	 MAE = 4.064393719944474
Latent dimension = 48,	RMSE = 5.138457562502242,	 MAE = 4.1429601984772475
Latent dimension = 49,	RMSE = 5.24805267775096,	 MAE = 4.20272550975695
Latent dimension = 50,	RMSE = 5.396127803718813,	 MAE = 4.326192885899592

		//initilization
		lambda=0.0001;
		eta=0.03;

		predictionLowerBound=1;
		predictionUpperBound=5;

		convergeSampleProportion=1;// select all the training example to calculate the cost function
		convergeThreshold=0.0000001;
		convergeCheckWindowSize=trainSet.size()*0.3;  // for every "convergeCheckWindowSize" number updates, check if converge


		//double middleValue=((predictionUpperBound-predictionLowerBound)/2)/latentDimension;
		double lower_bound_init=0;
		double upper_bound_init=1;
